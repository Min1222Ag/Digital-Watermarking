import cv2
import numpy as np
import hashlib
from datetime import datetime
from PIL import Image
from PIL.ExifTags import TAGS

# 타겟 원본 이미지 메타데이터에서 생성 날짜 추출 #
def get_image_creation_date(image_path):
    with Image.open(image_path) as img:
        exif_data = img._getexif()
        if exif_data is not None:
            for tag_id in exif_data:
                tag_name = TAGS.get(tag_id, tag_id)
                if tag_name == "DateTimeOriginal":
                    return exif_data[tag_id]
        date_input = input("이미지의 생성 날짜와 시간을 YYYY-MM-DD HH:MM:SS 형식으로 입력해주세요: ") # 실제로는 메타데이터로 받아옴
        return datetime.strptime(date_input, '%Y-%m-%d %H:%M:%S').strftime('%Y-%m-%d %H:%M:%S')

# 디지털 워터마크 생성 및 LSB 스테가노그래피 적용 #
def apply_watermark_to_bbox(image, bbox, watermark):
    x_min, y_min, x_max, y_max, confidence, class_ = bbox
    
    # 바운딩 박스의 너비와 높이 계산
    bbox_width = x_max - x_min
    bbox_height = y_max - y_min
    
    # 워터마크를 바운딩 박스의 크기에 맞게 조정
    scaled_watermark = cv2.resize(watermark, (bbox_width, bbox_height))
    
    # 워터마크를 바운딩 박스의 위치에 적용
    start_x = max(x_min, 0)
    start_y = max(y_min, 0)
    end_x = min(start_x + scaled_watermark.shape[1], image.shape[1])
    end_y = min(start_y + scaled_watermark.shape[0], image.shape[0])
    
    # 워터마크 적용
    for i in range(start_y, end_y):
        for j in range(start_x, end_x):
            pixel = image[i, j]
            watermark_pixel = scaled_watermark[i - start_y, j - start_x]
            if watermark_pixel.any() != 0:
              image[i, j] = watermark_pixel
            else:
              image[i, j] = pixel

    return image

def embed_watermark(author_name, image_path, output_path):
    creation_date = get_image_creation_date(image_path) # 원본 이미지 생성 날짜 추출 함수 호출
    application_date = datetime.now().strftime('%Y-%m-%d %H:%M:%S') # 디지털 워터마크 적용 날짜 및 시간 추출 
    watermark_data = f"{author_name}|{creation_date}|{application_date}" # main()에서 입력받은 저작권자명 포함 watermark_data 생성
    
    img = cv2.imread(image_path, cv2.IMREAD_COLOR) # 지정된 파일 경로에서 컬러 이미지 읽기
    bboxes = [(100, 100, 200, 200, 0.9, 'person')]  # 바운딩 박스 정보 (임시로 예시를 넣었습니다)
    watermark = np.random.randint(0, 2, (50, 50, 3), dtype=np.uint8) * 255  # 임의의 워터마크 생성 (50x50 크기의 컬러 이미지)
    
    for bbox in bboxes:
        img = apply_watermark_to_bbox(img, bbox, watermark) # 바운딩 박스에 워터마크 적용

    cv2.imwrite(output_path, img) # 최종적으로 워터마크가 적용된 이미지를 사용자가 지정한 경로(output_path)에 저장

# 사용자 입력과 프로그램 실행 #
def main():
    author_name = input("저작권자명을 입력해주세요: ")
    image_path = input("대상 이미지 파일 경로를 입력해주세요: ")
    output_path = input("워터마크가 적용된 이미지를 저장할 경로를 입력해주세요(확장자 포함): ")
    embed_watermark(author_name, image_path, output_path)
    print("워터마크 적용이 완료되었습니다.")

if __name__ == "__main__":
    main()
